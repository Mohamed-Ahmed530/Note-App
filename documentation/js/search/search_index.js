var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.077,1,0.625]],["body/components/AppComponent.html",[0,0.121,1,1.049,2,1,3,0.474,4,0.474,5,0.851,6,0.851,7,0.851,8,0.397,9,2.283,10,0.743,11,1.593,12,1.056,13,2.584,14,1.144,15,2.919,16,4.299,17,1.049,18,1.144,19,3.806,20,1.144,21,3.806,22,0.743,23,1.304,24,2.919,25,0.743,26,0.051,27,1.652,28,1.258,29,1.258,30,2.221,31,0.97,32,2.83,33,0.943,34,0.474,35,1.104,36,0.868,37,1.922,38,1.437,39,2.283,40,1.922,41,0.474,42,0.556,43,3.806,44,0.851,45,1.144,46,1.144,47,0.851,48,1.382,49,0.851,50,0.748,51,0.851,52,0.646,53,0.851,54,0.851,55,0.646,56,0.851,57,0.646,58,0.851,59,0.646,60,0.851,61,0.851,62,0.646,63,0.851,64,0.646,65,0.851,66,0.851,67,0.851,68,0.035,69,0.035]],["title/components/AuthComponent.html",[0,0.077,52,0.625]],["body/components/AuthComponent.html",[0,0.125,1,0.696,2,1.05,3,0.511,4,0.511,5,0.917,6,0.917,7,0.917,8,0.428,10,0.801,11,1.613,12,1.055,14,1.202,15,3.029,17,0.912,18,1.202,20,1.202,26,0.051,33,0.931,34,0.511,35,1.19,36,1.081,37,2.07,40,2.07,41,0.511,42,0.599,44,0.917,45,1.202,46,1.202,47,0.917,48,1.423,49,0.917,50,0.786,51,0.917,52,1.081,53,0.917,54,0.917,55,0.696,56,0.917,57,0.696,58,0.917,59,0.696,60,0.917,61,0.917,62,0.696,63,0.917,64,0.696,65,0.917,66,0.917,67,0.917,68,0.037,69,0.037,70,2.459,71,3.999,72,3.999,73,3.999]],["title/components/FotterComponent.html",[0,0.077,17,0.625]],["body/components/FotterComponent.html",[0,0.125,1,0.689,2,1.043,3,0.505,4,0.505,5,0.907,6,0.907,7,0.907,8,0.424,10,0.793,11,1.61,12,1.053,14,0.907,17,1.076,18,1.194,20,1.194,26,0.05,33,0.593,34,0.505,36,0.689,41,0.505,42,0.593,44,0.907,45,1.194,46,1.194,47,0.907,48,1.418,49,0.907,50,0.781,51,0.907,52,0.689,53,0.907,54,0.907,55,0.689,56,0.907,57,0.689,58,0.907,59,0.689,60,0.907,61,0.907,62,0.689,63,0.907,64,0.689,65,0.907,66,0.907,67,0.907,68,0.036,69,0.036,74,2.434,75,3.972,76,3.972,77,3.972,78,3.972,79,3.203,80,3.972,81,3.972,82,3.203,83,3.972,84,3.972,85,3.972,86,3.203,87,3.972,88,3.972]],["title/components/HomeComponent.html",[0,0.077,55,0.625]],["body/components/HomeComponent.html",[0,0.077,1,0.303,2,0.568,3,0.222,4,0.222,5,0.399,6,0.399,7,0.399,8,0.186,10,0.349,11,1.336,12,0.873,14,0.65,17,0.303,18,0.65,20,0.65,22,0.718,23,0.741,24,3.077,25,1.073,26,0.052,28,1.974,29,1.974,30,2.594,31,1.676,33,0.77,34,0.222,36,0.303,38,0.674,41,0.222,42,0.261,44,0.399,45,0.65,46,0.65,47,0.399,48,0.947,49,0.399,50,0.619,51,0.399,52,0.303,53,0.399,54,0.399,55,0.719,56,0.399,57,0.303,58,0.399,59,0.303,60,0.399,61,0.399,62,0.303,63,0.399,64,0.303,65,0.399,66,0.399,67,0.399,68,0.02,69,0.02,89,1.071,90,1.467,91,2.733,92,2.204,93,1.743,94,1.855,95,1.595,96,2.733,97,2.161,98,2.161,99,2.733,100,2.733,101,2.733,102,2.144,103,2.867,104,2.138,105,2.733,106,1.838,107,3.467,108,3.467,109,2.138,110,2.733,111,2.733,112,0.843,113,2.54,114,1.743,115,3.15,116,2.138,117,3.15,118,2.161,119,3.15,120,1.327,121,1.529,122,2.465,123,2.161,124,1.327,125,1.261,126,1.261,127,1.327,128,1.327,129,1.327,130,1.327,131,2.161,132,1.327,133,1.327,134,1.327,135,2.354,136,2.138,137,2.947,138,2.773,139,3.655,140,1.327,141,3.289,142,1.929,143,1.327,144,1.327,145,2.161,146,1.327,147,1.327,148,2.161,149,1.327,150,3.467,151,1.327,152,1.327,153,1.467,154,1.327,155,2.204,156,1.327,157,1.327,158,0.775,159,1.327,160,1.327,161,0.901,162,0.775,163,0.674,164,1.071,165,0.775,166,1.327,167,0.59,168,3.15,169,1.327,170,2.161,171,1.327,172,2.161,173,2.54,174,3.15,175,1.327,176,1.467,177,2.733,178,1.327,179,2.733,180,2.161,181,2.161,182,0.901,183,0.901,184,1.327,185,1.327,186,1.327,187,1.327,188,1.327,189,1.071,190,1.327,191,1.327,192,1.327,193,1.327,194,1.327,195,1.327,196,1.327,197,1.327,198,1.327,199,1.327,200,1.327,201,2.54,202,2.161,203,3.15,204,1.743,205,2.161,206,2.161,207,2.161,208,3.716,209,1.743]],["title/interfaces/INote.html",[163,1.392,210,1.6]],["body/interfaces/INote.html",[3,0.569,4,0.569,8,0.477,22,0.893,23,1.47,24,3.349,25,1.385,26,0.05,27,3.261,41,0.569,68,0.039,69,0.039,139,3.978,155,3.978,163,2.177,210,1.985,211,3.4,212,2.742,213,4.933,214,4.933,215,4.933,216,4.933,217,4.698]],["title/components/LoginComponent.html",[0,0.077,57,0.625]],["body/components/LoginComponent.html",[0,0.085,1,0.353,2,0.641,3,0.259,4,0.259,5,0.465,6,0.465,7,0.465,8,0.217,10,0.406,11,1.396,12,0.913,14,0.734,17,0.353,18,0.734,20,0.734,22,0.406,23,0.837,25,0.983,26,0.052,28,1.919,29,1.919,31,1.618,33,0.819,34,0.259,35,0.603,36,0.353,38,0.785,41,0.259,42,0.304,44,0.465,45,0.734,46,0.734,47,0.465,48,1.033,49,0.465,50,0.48,51,0.465,52,0.353,53,0.465,54,0.465,55,0.353,56,0.465,57,0.784,58,0.465,59,0.353,60,0.465,61,0.465,62,0.353,63,0.465,64,0.353,65,0.465,66,0.465,67,0.465,68,0.022,69,0.022,90,1.658,92,2.441,94,2.055,102,2.397,103,3.206,104,2.701,109,2.334,112,0.953,116,2.334,121,1.181,122,2.007,135,1.658,136,1.658,137,1.05,138,2.334,141,2.334,142,1.085,153,1.658,158,1.767,161,1.05,162,0.903,165,0.903,167,0.687,176,1.05,182,1.05,183,1.05,218,1.247,219,3.209,220,2.441,221,2.441,222,2.442,223,2.442,224,3.209,225,2.773,226,2.442,227,2.442,228,2.007,229,2.773,230,1.745,231,3.438,232,2.773,233,1.546,234,1.546,235,1.546,236,1.546,237,1.546,238,1.969,239,2.542,240,1.546,241,1.969,242,1.969,243,1.969,244,1.969,245,1.969,246,1.546,247,1.546,248,1.425,249,1.546,250,1.546,251,1.546,252,1.969,253,1.546,254,1.247,255,1.05,256,1.546,257,1.247,258,1.247,259,1.969,260,1.546,261,1.247,262,1.546,263,1.546,264,1.546,265,1.247,266,1.969,267,1.767,268,1.247,269,1.247,270,1.247,271,1.969,272,1.546,273,1.546,274,1.546,275,1.247,276,1.247,277,1.247,278,1.247,279,1.546,280,3.209,281,2.442,282,2.442,283,2.442,284,2.773,285,2.442,286,1.969,287,1.969,288,3.209,289,2.442,290,2.442,291,2.442,292,2.442,293,1.969,294,1.969,295,1.969,296,1.969,297,1.969,298,1.969,299,1.969]],["title/components/MainComponent.html",[0,0.077,59,0.625]],["body/components/MainComponent.html",[0,0.125,1,0.696,2,1.05,3,0.511,4,0.511,5,0.917,6,0.917,7,0.917,8,0.428,10,0.801,11,1.613,12,1.055,14,1.202,15,3.029,17,0.912,18,1.202,20,1.202,26,0.051,33,0.931,34,0.511,35,1.19,36,1.081,37,2.07,40,2.07,41,0.511,42,0.599,44,0.917,45,1.202,46,1.202,47,0.917,48,1.423,49,0.917,50,0.786,51,0.917,52,0.696,53,0.917,54,0.917,55,0.696,56,0.917,57,0.696,58,0.917,59,1.081,60,0.917,61,0.917,62,0.696,63,0.917,64,0.696,65,0.917,66,0.917,67,0.917,68,0.037,69,0.037,300,2.459,301,3.999,302,3.999,303,3.999]],["title/components/NavbarComponent.html",[0,0.077,36,0.625]],["body/components/NavbarComponent.html",[0,0.116,1,0.596,2,0.946,3,0.437,4,0.437,5,0.785,6,0.785,7,0.785,8,0.367,10,0.686,11,1.57,12,1.043,14,1.083,17,0.596,18,1.083,20,1.083,22,0.686,23,1.235,26,0.051,28,1.833,29,1.833,30,2.103,31,1.524,33,0.708,34,0.437,35,1.019,36,1.015,41,0.437,42,0.513,44,0.785,45,1.083,46,1.083,47,0.785,48,1.336,49,0.785,50,0.708,51,0.785,52,0.596,53,0.785,54,0.785,55,0.596,56,0.785,57,0.596,58,0.785,59,0.596,60,0.785,61,0.785,62,0.596,63,0.785,64,0.596,65,1.24,66,0.785,67,0.785,68,0.033,69,0.033,93,2.905,102,2.094,112,1.406,121,1.019,122,1.524,158,1.524,219,2.905,221,3.326,228,2.595,248,2.103,267,2.103,304,2.106,305,3.603,306,4.124,307,3.603,308,3.603,309,4.942,310,4.823,311,3.603,312,3.603,313,2.612,314,2.612,315,2.612,316,2.612,317,2.612,318,2.612]],["title/injectables/NoteService.html",[106,1.6,319,1.392]],["body/injectables/NoteService.html",[3,0.482,4,0.482,8,0.404,13,1.954,22,0.756,25,1.216,26,0.051,27,2.702,31,1.701,33,0.91,34,0.482,41,0.482,42,0.566,50,0.91,68,0.035,69,0.035,106,2.247,112,1.502,113,3.104,114,3.104,121,1.882,125,2.702,126,2.702,167,1.279,319,1.954,320,1.954,321,2.321,322,4.336,323,4.336,324,3.849,325,2.321,326,2.321,327,3.733,328,2.879,329,2.879,330,2.879,331,3.891,332,4.004,333,2.879,334,2.879,335,3.849,336,2.879,337,2.879,338,2.879,339,2.879,340,1.954,341,1.68,342,2.321,343,2.321,344,2.879,345,2.321,346,2.879,347,2.816,348,2.879,349,2.879,350,2.879,351,2.879,352,2.879,353,2.879,354,2.879,355,2.879,356,2.879,357,2.879]],["title/components/NotfoundComponent.html",[0,0.077,62,0.625]],["body/components/NotfoundComponent.html",[0,0.127,1,0.72,2,1.074,3,0.528,4,0.528,5,0.948,6,0.948,7,0.948,8,0.443,10,0.829,11,1.621,12,1.06,14,0.948,17,0.72,18,1.229,20,1.229,26,0.051,33,0.804,34,0.528,36,0.933,41,0.528,42,0.62,44,0.948,45,1.229,46,1.229,47,0.948,48,1.442,49,0.948,50,0.804,51,0.948,52,0.72,53,0.948,54,0.948,55,0.72,56,0.948,57,0.72,58,0.948,59,0.72,60,0.948,61,0.948,62,1.095,63,0.948,64,0.72,65,0.948,66,0.948,67,0.948,68,0.037,69,0.037,358,2.544,359,4.089,360,4.089,361,4.089,362,3.155]],["title/components/RegisterComponent.html",[0,0.077,64,0.625]],["body/components/RegisterComponent.html",[0,0.076,1,0.296,2,0.557,3,0.217,4,0.217,5,0.39,6,0.39,7,0.39,8,0.182,10,0.341,11,1.326,12,0.868,14,0.638,17,0.296,18,0.638,20,0.638,22,0.341,23,0.727,25,0.9,26,0.052,28,1.799,29,1.799,31,1.543,33,0.796,34,0.217,35,0.507,36,0.296,38,0.659,41,0.217,42,0.255,44,0.39,45,0.638,46,0.638,47,0.39,48,0.934,49,0.39,50,0.847,51,0.39,52,0.296,53,0.39,54,0.39,55,0.296,56,0.39,57,0.296,58,0.39,59,0.296,60,0.39,61,0.39,62,0.296,63,0.39,64,0.709,65,1.167,66,0.39,67,0.39,68,0.019,69,0.019,94,1.827,102,2.286,103,3.057,104,2.497,109,2.11,112,0.828,116,2.11,121,1.05,122,1.814,135,1.441,136,1.441,138,2.926,141,2.11,142,0.943,153,1.441,158,1.571,161,0.881,162,0.758,165,0.758,167,0.577,176,0.881,182,0.881,183,0.881,220,2.17,224,2.966,225,2.507,228,1.814,229,2.507,230,1.578,232,2.507,238,1.711,239,2.11,241,1.711,242,1.711,243,1.711,244,1.711,245,1.711,248,1.239,252,1.711,254,1.047,255,0.881,257,1.047,258,1.047,259,1.711,261,1.047,265,1.047,266,1.711,267,1.814,268,1.047,269,1.047,270,1.047,271,1.047,275,1.047,276,1.047,277,1.047,278,1.047,280,2.966,284,3.475,286,1.711,287,1.711,288,2.966,293,1.711,294,1.711,295,1.711,296,2.507,297,1.711,298,2.966,340,0.881,363,1.047,364,2.122,365,2.122,366,2.122,367,2.122,368,3.108,369,1.298,370,1.298,371,1.298,372,1.298,373,1.298,374,1.298,375,2.122,376,2.122,377,2.122,378,2.122,379,2.122,380,2.122,381,2.122,382,2.122,383,1.298,384,1.298,385,1.298,386,1.298,387,1.298,388,1.298,389,1.298,390,1.298,391,1.298,392,1.298,393,1.298,394,1.298,395,1.298,396,1.298,397,2.122,398,2.122,399,2.122,400,2.122,401,2.122,402,3.108,403,2.122,404,2.122,405,2.122,406,3.108,407,2.122,408,2.122,409,2.122,410,2.122,411,2.122,412,2.122,413,2.122,414,3.108,415,3.678,416,2.122,417,2.122,418,2.122,419,2.122,420,2.122,421,4.049,422,2.122,423,2.122,424,2.122,425,2.122,426,2.122]],["title/pipes/SearchPipe.html",[95,1.6,427,1.6]],["body/pipes/SearchPipe.html",[3,0.597,4,0.597,8,0.5,10,0.936,25,0.936,26,0.051,27,2.578,31,1.222,33,0.868,34,0.597,41,0.597,42,0.701,50,0.944,68,0.04,69,0.04,90,2.42,95,2.578,112,1.391,121,1.391,125,2.08,126,2.08,163,2.618,164,2.874,204,3.562,347,2.08,427,2.578,428,3.564,429,2.874,430,3.564,431,3.564,432,4.417,433,3.564,434,3.564,435,4.417,436,3.564,437,3.564,438,3.564,439,3.564,440,3.564]],["title/injectables/UserService.html",[230,1.392,319,1.392]],["body/injectables/UserService.html",[3,0.543,4,0.543,8,0.455,13,2.201,22,0.851,25,1.207,26,0.051,31,1.575,33,0.953,34,0.543,41,0.543,42,0.637,50,0.903,68,0.038,69,0.038,102,1.646,112,1.623,121,1.623,125,2.682,126,2.682,167,1.441,230,2.112,299,3.355,319,2.112,320,2.201,325,3.355,326,2.614,327,3.909,331,3.909,332,3.705,340,2.201,341,1.892,342,2.614,343,2.614,345,2.614,347,2.429,441,2.614,442,4.16,443,3.242,444,3.242,445,3.242,446,3.242,447,3.242,448,3.242,449,3.242,450,3.242,451,3.242]],["title/coverage.html",[452,3.003]],["body/coverage.html",[0,0.144,1,0.603,8,0.371,9,2.13,12,0.519,17,0.603,25,0.694,26,0.051,36,0.603,52,0.603,55,0.603,57,0.603,59,0.603,62,0.603,64,0.603,68,0.033,69,0.033,70,2.13,74,2.13,89,2.13,95,1.541,106,1.541,142,1.174,163,1.341,210,1.541,212,2.13,218,2.13,230,1.341,300,2.13,304,2.13,319,1.843,321,2.13,341,1.541,358,2.13,363,2.13,427,1.541,429,2.13,441,2.13,452,2.13,453,2.641,454,2.641,455,2.641,456,5.559,457,2.641,458,2.928,459,5.376,460,2.13,461,5.461,462,2.13,463,2.13,464,2.13,465,2.13,466,2.13,467,2.13,468,2.13,469,2.13,470,2.13,471,2.13,472,2.13,473,2.13,474,2.13,475,2.13,476,2.641,477,2.641,478,2.641,479,2.641,480,3.63,481,2.641,482,2.13,483,1.541,484,3.777,485,2.13,486,2.13,487,2.13,488,2.641,489,2.641,490,2.13,491,2.641,492,2.641]],["title/dependencies.html",[493,1.853,494,2.655]],["body/dependencies.html",[26,0.051,34,0.595,35,1.386,38,2.238,39,2.866,68,0.04,69,0.04,162,2.074,165,2.074,167,1.579,255,2.413,483,2.074,494,2.866,495,3.553,496,5.424,497,3.553,498,4.793,499,3.555,500,3.553,501,2.866,502,3.553,503,3.553,504,3.553,505,2.866,506,3.553,507,3.553,508,2.866,509,3.553,510,4.409,511,3.553,512,3.553,513,3.553,514,3.553,515,3.553]],["title/index.html",[22,0.603,516,2.297,517,2.297]],["body/index.html",[12,0.922,26,0.05,30,2.739,68,0.039,69,0.039,79,2.734,82,4.098,86,2.734,142,1.507,201,2.734,209,2.734,483,2.499,505,2.734,518,3.784,519,4.692,520,3.39,521,3.39,522,3.39,523,3.39,524,4.692,525,3.39,526,3.39,527,3.39,528,3.39,529,3.39,530,3.39,531,3.39,532,3.39,533,3.39,534,3.39,535,3.39,536,3.39,537,3.39,538,3.39,539,4.281,540,3.39,541,2.734,542,3.39,543,3.39,544,3.39,545,3.39,546,3.39,547,3.39,548,4.281,549,3.39,550,3.39,551,3.39,552,3.39,553,3.39,554,3.39,555,3.39,556,3.39,557,3.39,558,3.39,559,3.39]],["title/modules.html",[560,3.003]],["body/modules.html",[26,0.045,68,0.045,69,0.045,560,3.509]],["title/overview.html",[561,3.003]],["body/overview.html",[2,1.11,26,0.045,68,0.045,69,0.045,210,2.467,320,2.87,427,2.467,561,3.409,562,4.227,563,4.227,564,4.892]],["title/properties.html",[23,1.128,493,1.853]],["body/properties.html",[23,1.475,26,0.047,68,0.045,69,0.045,565,4.304,566,4.304]],["title/miscellaneous/variables.html",[567,1.853,568,2.655]],["body/miscellaneous/variables.html",[12,0.6,22,0.543,25,1.244,26,0.052,28,2.303,29,2.303,68,0.028,69,0.028,137,2.46,142,0.919,173,2.46,189,3.598,228,1.78,239,2.715,248,1.78,267,2.115,341,1.78,347,2.764,458,1.668,460,2.922,462,2.922,463,1.668,464,2.46,465,1.668,466,2.46,467,1.668,468,1.668,469,2.46,470,1.668,471,2.46,472,1.668,473,2.46,474,1.668,475,2.922,482,1.668,483,1.78,484,1.668,485,2.46,486,2.46,487,2.46,490,2.46,499,1.668,501,1.668,508,1.668,518,1.668,541,1.668,567,1.668,568,1.668,569,4.264,570,2.068,571,2.068,572,2.068,573,3.05,574,2.068,575,2.068,576,2.068,577,2.068,578,2.068,579,2.068,580,2.068,581,2.068,582,2.068,583,2.068,584,2.068,585,2.068,586,2.068,587,2.068,588,2.068,589,3.05,590,3.05,591,2.068,592,2.068,593,2.068,594,2.068,595,2.068,596,2.068,597,2.068,598,2.068,599,2.068,600,2.068,601,2.068,602,2.068,603,2.068,604,3.05,605,3.05,606,3.05,607,3.623,608,3.623,609,3.623,610,3.05,611,2.068,612,2.068,613,2.068,614,2.068,615,2.068,616,2.068,617,2.068,618,2.068,619,2.068,620,2.068,621,3.05,622,3.623,623,2.068,624,2.068,625,2.068,626,2.068,627,2.068,628,2.068,629,2.068,630,2.068,631,2.068,632,2.068,633,2.068,634,2.068,635,2.068,636,2.068,637,2.068]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":566,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":564,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["19.0.0",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["19.1.0",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["19.1.5",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":563,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":406,"title":{},"body":{"components/RegisterComponent.html":{}}}],["2000",{"_index":276,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["3",{"_index":403,"title":{},"body":{"components/RegisterComponent.html":{}}}],["4.18.2",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":539,"title":{},"body":{"index.html":{}}}],["5.3.5",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":295,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["6.7.2",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":562,"title":{},"body":{"overview.html":{}}}],["9]{8",{"_index":382,"title":{},"body":{"components/RegisterComponent.html":{}}}],["__v",{"_index":213,"title":{},"body":{"interfaces/INote.html":{}}}],["_id",{"_index":155,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/INote.html":{}}}],["actual_component",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["add",{"_index":201,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["added",{"_index":178,"title":{},"body":{"components/HomeComponent.html":{}}}],["addnote",{"_index":113,"title":{},"body":{"components/HomeComponent.html":{},"injectables/NoteService.html":{}}}],["addnote(data",{"_index":329,"title":{},"body":{"injectables/NoteService.html":{}}}],["addnote(data:any):observable",{"_index":346,"title":{},"body":{"injectables/NoteService.html":{}}}],["addnote(this.addnoteform.value",{"_index":171,"title":{},"body":{"components/HomeComponent.html":{}}}],["addnoteform",{"_index":99,"title":{},"body":{"components/HomeComponent.html":{}}}],["addsubscription",{"_index":100,"title":{},"body":{"components/HomeComponent.html":{}}}],["age",{"_index":415,"title":{},"body":{"components/RegisterComponent.html":{}}}],["age:[null",{"_index":378,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ahmed",{"_index":558,"title":{},"body":{"index.html":{}}}],["allnotes",{"_index":434,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["allnotes.filter",{"_index":438,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["allows",{"_index":525,"title":{},"body":{"index.html":{}}}],["angular",{"_index":518,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":255,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":340,"title":{},"body":{"injectables/NoteService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":162,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anotepad",{"_index":84,"title":{},"body":{"components/FotterComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":522,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":71,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["auth.component.css",{"_index":73,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":72,"title":{},"body":{"components/AuthComponent.html":{}}}],["authcomponent",{"_index":52,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["authentication",{"_index":531,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["basurl",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["best",{"_index":83,"title":{},"body":{"components/FotterComponent.html":{}}}],["black.vercel.app",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":238,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bootstrap",{"_index":483,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser",{"_index":499,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["built",{"_index":523,"title":{},"body":{"index.html":{}}}],["canactivatefn",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chars",{"_index":298,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["class",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["clean",{"_index":86,"title":{},"body":{"components/FotterComponent.html":{},"index.html":{}}}],["cli",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":203,"title":{},"body":{"components/HomeComponent.html":{}}}],["collaboration:email",{"_index":555,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["config",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["console.log(err",{"_index":182,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(res",{"_index":176,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(this.noteslist",{"_index":187,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":189,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":325,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["constructor(httpclient",{"_index":326,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":344,"title":{},"body":{"injectables/NoteService.html":{}}}],["contact",{"_index":550,"title":{},"body":{"index.html":{}}}],["content",{"_index":139,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/INote.html":{}}}],["core/interfaces/inote",{"_index":164,"title":{},"body":{"components/HomeComponent.html":{},"pipes/SearchPipe.html":{}}}],["core/services/note/note.service",{"_index":160,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/services/user/user.service",{"_index":254,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["coverage",{"_index":452,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdat",{"_index":214,"title":{},"body":{"interfaces/INote.html":{}}}],["createdby",{"_index":215,"title":{},"body":{"interfaces/INote.html":{}}}],["createnoderequesthandler(app",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css3",{"_index":543,"title":{},"body":{"index.html":{}}}],["data",{"_index":331,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["data:any):observable",{"_index":354,"title":{},"body":{"injectables/NoteService.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":209,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["deleted",{"_index":196,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletenote",{"_index":114,"title":{},"body":{"components/HomeComponent.html":{},"injectables/NoteService.html":{}}}],["deletenote(id",{"_index":123,"title":{},"body":{"components/HomeComponent.html":{}}}],["deletenote(noteid",{"_index":333,"title":{},"body":{"injectables/NoteService.html":{}}}],["deletenote(noteid:string):observable",{"_index":356,"title":{},"body":{"injectables/NoteService.html":{}}}],["deletesubscription",{"_index":101,"title":{},"body":{"components/HomeComponent.html":{}}}],["demo",{"_index":545,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":494,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["design",{"_index":538,"title":{},"body":{"index.html":{}}}],["dev",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directive",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["directives",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["done",{"_index":270,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["during",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["easy",{"_index":87,"title":{},"body":{"components/FotterComponent.html":{}}}],["edit",{"_index":532,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":529,"title":{},"body":{"index.html":{}}}],["egypt",{"_index":425,"title":{},"body":{"components/RegisterComponent.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["email",{"_index":280,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["email:[null",{"_index":241,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["enter",{"_index":286,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environment",{"_index":341,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":342,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["equal",{"_index":402,"title":{},"body":{"components/RegisterComponent.html":{}}}],["err",{"_index":181,"title":{},"body":{"components/HomeComponent.html":{}}}],["err.error.msg",{"_index":278,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":180,"title":{},"body":{"components/HomeComponent.html":{}}}],["error:(err",{"_index":277,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errormsg",{"_index":224,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errormsg:any",{"_index":257,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["eventcoalescing",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everyday",{"_index":78,"title":{},"body":{"components/FotterComponent.html":{}}}],["existing",{"_index":533,"title":{},"body":{"index.html":{}}}],["export",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["express",{"_index":508,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":239,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":85,"title":{},"body":{"components/FotterComponent.html":{}}}],["features",{"_index":530,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":554,"title":{},"body":{"index.html":{}}}],["feel",{"_index":551,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["finalize",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formbuilder",{"_index":104,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":135,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":96,"title":{},"body":{"components/HomeComponent.html":{}}}],["fortawesome/fontawesome",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["fotter",{"_index":75,"title":{},"body":{"components/FotterComponent.html":{}}}],["fotter'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["fotter.component.css",{"_index":77,"title":{},"body":{"components/FotterComponent.html":{}}}],["fotter.component.html",{"_index":76,"title":{},"body":{"components/FotterComponent.html":{}}}],["fottercomponent",{"_index":17,"title":{"components/FotterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["free",{"_index":505,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["getnotes",{"_index":322,"title":{},"body":{"injectables/NoteService.html":{}}}],["getnotes():observable",{"_index":349,"title":{},"body":{"injectables/NoteService.html":{}}}],["getsubscription",{"_index":105,"title":{},"body":{"components/HomeComponent.html":{}}}],["getting",{"_index":516,"title":{"index.html":{}},"body":{}}],["getusernote",{"_index":115,"title":{},"body":{"components/HomeComponent.html":{}}}],["getusernotes",{"_index":323,"title":{},"body":{"injectables/NoteService.html":{}}}],["getusernotes():observable",{"_index":351,"title":{},"body":{"injectables/NoteService.html":{}}}],["github",{"_index":548,"title":{},"body":{"index.html":{}}}],["greater",{"_index":420,"title":{},"body":{"components/RegisterComponent.html":{}}}],["handler",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headerinterceptor",{"_index":473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":93,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["home.component.css",{"_index":98,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":97,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":55,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["html5",{"_index":542,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":327,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["httpclient:httpclient",{"_index":345,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["httperrorresponse",{"_index":389,"title":{},"body":{"components/RegisterComponent.html":{}}}],["httpinterceptorfn",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://note",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":127,"title":{},"body":{"components/HomeComponent.html":{}}}],["identifier",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":90,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"pipes/SearchPipe.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["importprovidersfrom",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":158,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(formbuilder",{"_index":145,"title":{},"body":{"components/HomeComponent.html":{}}}],["inject(ngxspinnerservice",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(noteservice",{"_index":148,"title":{},"body":{"components/HomeComponent.html":{}}}],["inject(platform_id",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":248,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(toastrservice",{"_index":153,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(userservice",{"_index":252,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["injectable",{"_index":319,"title":{"injectables/NoteService.html":{},"injectables/UserService.html":{}},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":320,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inote",{"_index":163,"title":{"interfaces/INote.html":{}},"body":{"components/HomeComponent.html":{},"interfaces/INote.html":{},"pipes/SearchPipe.html":{},"coverage.html":{}}}],["input",{"_index":315,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input(true",{"_index":316,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inputs",{"_index":311,"title":{},"body":{"components/NavbarComponent.html":{}}}],["interface",{"_index":210,"title":{"interfaces/INote.html":{}},"body":{"interfaces/INote.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":211,"title":{},"body":{"interfaces/INote.html":{}}}],["islogin",{"_index":309,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isplatformbrowser(platform_id",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isvalid",{"_index":225,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isvalid:boolean",{"_index":261,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":439,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["item.title.tolowercase().includes(term.tolowercase",{"_index":440,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["less",{"_index":405,"title":{},"body":{"components/RegisterComponent.html":{}}}],["live",{"_index":544,"title":{},"body":{"index.html":{}}}],["loading",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["loadinginterceptor",{"_index":475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":535,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":536,"title":{},"body":{"index.html":{}}}],["localstorage.getitem(\"token",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.getitem('token",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.removeitem(\"token",{"_index":317,"title":{},"body":{"components/NavbarComponent.html":{}}}],["localstorage.setitem('token",{"_index":272,"title":{},"body":{"components/LoginComponent.html":{}}}],["login",{"_index":219,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["login.component.css",{"_index":223,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":222,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":57,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":226,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\"email\")?.errors",{"_index":282,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\"email\")?.geterror(\"email",{"_index":285,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\"email\")?.geterror(\"required",{"_index":283,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\"email\")?.touched",{"_index":281,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\"password\")?.errors",{"_index":290,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\"password\")?.geterror(\"pattern",{"_index":292,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\"password\")?.geterror(\"required",{"_index":291,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\"password\")?.touched",{"_index":289,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform:formgroup",{"_index":260,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsubscription",{"_index":227,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsubscription:subscription",{"_index":256,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":231,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":310,"title":{},"body":{"components/NavbarComponent.html":{}}}],["m7a5",{"_index":559,"title":{},"body":{"index.html":{}}}],["main",{"_index":301,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["main.component.css",{"_index":303,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.html",{"_index":302,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":59,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["manage",{"_index":527,"title":{},"body":{"index.html":{}}}],["matching",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{}}}],["methods",{"_index":112,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":567,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":560,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mohamed",{"_index":557,"title":{},"body":{"index.html":{}}}],["mohamed.ahmed.mmaa.530@gmail.comlinkedin",{"_index":556,"title":{},"body":{"index.html":{}}}],["more",{"_index":296,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["name:[null",{"_index":375,"title":{},"body":{"components/RegisterComponent.html":{}}}],["navbar",{"_index":305,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["navbar.component.css",{"_index":308,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":307,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":362,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["navbarcomponent",{"_index":36,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["new",{"_index":142,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":173,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next:(res",{"_index":265,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngclass",{"_index":220,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngondestroy",{"_index":116,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":117,"title":{},"body":{"components/HomeComponent.html":{}}}],["ngx",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["ngxspinnercomponent",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["ngxspinnermodule",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice.hide",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice.show",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nota",{"_index":133,"title":{},"body":{"components/HomeComponent.html":{}}}],["notauthguard",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["note.content",{"_index":207,"title":{},"body":{"components/HomeComponent.html":{}}}],["note.title",{"_index":206,"title":{},"body":{"components/HomeComponent.html":{}}}],["noteid",{"_index":335,"title":{},"body":{"injectables/NoteService.html":{}}}],["notepad",{"_index":80,"title":{},"body":{"components/FotterComponent.html":{}}}],["notes",{"_index":82,"title":{},"body":{"components/FotterComponent.html":{},"index.html":{}}}],["noteservice",{"_index":106,"title":{"injectables/NoteService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/NoteService.html":{},"coverage.html":{}}}],["noteslist",{"_index":107,"title":{},"body":{"components/HomeComponent.html":{}}}],["notfound",{"_index":359,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["notfound.component.css",{"_index":361,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.html",{"_index":360,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfoundcomponent",{"_index":62,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["null",{"_index":137,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":217,"title":{},"body":{"interfaces/INote.html":{}}}],["numbers",{"_index":426,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":332,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["ondestroy",{"_index":92,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["oninit",{"_index":91,"title":{},"body":{"components/HomeComponent.html":{}}}],["online",{"_index":79,"title":{},"body":{"components/FotterComponent.html":{},"index.html":{}}}],["optional",{"_index":126,"title":{},"body":{"components/HomeComponent.html":{},"injectables/NoteService.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["out",{"_index":553,"title":{},"body":{"index.html":{}}}],["overview",{"_index":561,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":493,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":125,"title":{},"body":{"components/HomeComponent.html":{},"injectables/NoteService.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["password",{"_index":288,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password:[null",{"_index":243,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["patchvalue",{"_index":118,"title":{},"body":{"components/HomeComponent.html":{}}}],["patchvalue(nota",{"_index":131,"title":{},"body":{"components/HomeComponent.html":{}}}],["path",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["personal",{"_index":528,"title":{},"body":{"index.html":{}}}],["phone",{"_index":421,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phone:[null",{"_index":380,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pipe",{"_index":427,"title":{"pipes/SearchPipe.html":{}},"body":{"pipes/SearchPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":428,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["pipetransform",{"_index":435,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["platform_id",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":202,"title":{},"body":{"components/HomeComponent.html":{}}}],["private",{"_index":102,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["project",{"_index":547,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"properties.html":{}}}],["provideanimations",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":343,"title":{},"body":{"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["providehttpclient(withfetch",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetoastr",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reach",{"_index":552,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":94,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["readonly",{"_index":103,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["register",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["register.component.css",{"_index":365,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":364,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":64,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":366,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"age\")?.errors",{"_index":417,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"age\")?.geterror(\"required",{"_index":418,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"age\")?.touched",{"_index":416,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"email\")?.errors",{"_index":408,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"email\")?.geterror(\"email",{"_index":410,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"email\")?.geterror(\"required",{"_index":409,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"email\")?.touched",{"_index":407,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"name\")?.errors",{"_index":399,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"name\")?.geterror(\"maxlength",{"_index":404,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"name\")?.geterror(\"minlength",{"_index":401,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"name\")?.geterror(\"required",{"_index":400,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"name\")?.touched",{"_index":398,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"password\")?.errors",{"_index":412,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"password\")?.geterror(\"min",{"_index":419,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"password\")?.geterror(\"pattern",{"_index":414,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"password\")?.geterror(\"required",{"_index":413,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"password\")?.touched",{"_index":411,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"phone\")?.errors",{"_index":423,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"phone\")?.geterror(\"required",{"_index":424,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\"phone\")?.touched",{"_index":422,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform:formgroup",{"_index":391,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersubscription",{"_index":367,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registersubscription:subscription",{"_index":390,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser",{"_index":368,"title":{},"body":{"components/RegisterComponent.html":{}}}],["rendermode",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":549,"title":{},"body":{"index.html":{}}}],["req",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqhandler",{"_index":487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":284,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":174,"title":{},"body":{"components/HomeComponent.html":{}}}],["res.msg",{"_index":269,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res.token",{"_index":273,"title":{},"body":{"components/LoginComponent.html":{}}}],["resolve(serverdistfolder",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsive",{"_index":537,"title":{},"body":{"index.html":{}}}],["results",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":347,"title":{},"body":{"injectables/NoteService.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":121,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/NoteService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["route",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":228,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/home",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":221,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["routerlinkactive",{"_index":306,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routeroutlet",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/MainComponent.html":{}}}],["rxjs",{"_index":167,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/NoteService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["search",{"_index":204,"title":{},"body":{"components/HomeComponent.html":{},"pipes/SearchPipe.html":{}}}],["searchpipe",{"_index":95,"title":{"pipes/SearchPipe.html":{}},"body":{"components/HomeComponent.html":{},"pipes/SearchPipe.html":{},"coverage.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["server",{"_index":501,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["setheaders:{token:`3b8ny__${localstorage.getitem(\"token",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settimeout",{"_index":268,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["shared/components/fotter/fotter.component",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/MainComponent.html":{}}}],["shared/components/navbar/navbar.component",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/MainComponent.html":{}}}],["shared/pipes/search.pipe",{"_index":166,"title":{},"body":{"components/HomeComponent.html":{}}}],["sigma",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signal",{"_index":150,"title":{},"body":{"components/HomeComponent.html":{}}}],["signin",{"_index":442,"title":{},"body":{"injectables/UserService.html":{}}}],["signin(data",{"_index":444,"title":{},"body":{"injectables/UserService.html":{}}}],["signin(data:any):observable",{"_index":450,"title":{},"body":{"injectables/UserService.html":{}}}],["signup",{"_index":299,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["signup(data",{"_index":446,"title":{},"body":{"injectables/UserService.html":{}}}],["signup(data:any):observable",{"_index":448,"title":{},"body":{"injectables/UserService.html":{}}}],["simple",{"_index":520,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"injectables/NoteService.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{}}}],["spinner",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["src/.../app.config.server.ts",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header.interceptor.ts",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../loading.interceptor.ts",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notauth.guard.ts",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/environments/environment.ts",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth/auth.guard.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/notauth/notauth.guard.ts",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptor/header/header.interceptor.ts",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptor/loading/loading.interceptor.ts",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interfaces/inote.ts",{"_index":212,"title":{},"body":{"interfaces/INote.html":{},"coverage.html":{}}}],["src/app/core/services/note/note.service.ts",{"_index":321,"title":{},"body":{"injectables/NoteService.html":{},"coverage.html":{}}}],["src/app/core/services/note/note.service.ts:10",{"_index":328,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/core/services/note/note.service.ts:15",{"_index":330,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/core/services/note/note.service.ts:19",{"_index":336,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/core/services/note/note.service.ts:23",{"_index":337,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/core/services/note/note.service.ts:27",{"_index":339,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/core/services/note/note.service.ts:31",{"_index":334,"title":{},"body":{"injectables/NoteService.html":{}}}],["src/app/core/services/user/user.service.ts",{"_index":441,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user/user.service.ts:14",{"_index":447,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:18",{"_index":445,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user/user.service.ts:9",{"_index":443,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/layout/auth/auth.component.ts",{"_index":70,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/layout/main/main.component.ts",{"_index":300,"title":{},"body":{"components/MainComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":89,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:107",{"_index":132,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:113",{"_index":124,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:122",{"_index":129,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:29",{"_index":149,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:30",{"_index":154,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:32",{"_index":146,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:34",{"_index":143,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:35",{"_index":147,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:36",{"_index":157,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:37",{"_index":144,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:39",{"_index":152,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:41",{"_index":151,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:43",{"_index":130,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:47",{"_index":140,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:52",{"_index":156,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:60",{"_index":120,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:79",{"_index":128,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:93",{"_index":134,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/login/login.component.ts",{"_index":218,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.component.ts:17",{"_index":253,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:18",{"_index":249,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:19",{"_index":250,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:21",{"_index":247,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:24",{"_index":236,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:26",{"_index":251,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:28",{"_index":235,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:32",{"_index":237,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:34",{"_index":246,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:39",{"_index":240,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:41",{"_index":233,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:66",{"_index":234,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/register/register.component.ts",{"_index":363,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/pages/register/register.component.ts:18",{"_index":388,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:19",{"_index":385,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:20",{"_index":386,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:22",{"_index":384,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:25",{"_index":372,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:27",{"_index":374,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:29",{"_index":387,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:31",{"_index":371,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:35",{"_index":373,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:38",{"_index":383,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:47",{"_index":370,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:71",{"_index":369,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/shared/components/fotter/fotter.component.ts",{"_index":74,"title":{},"body":{"components/FotterComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts",{"_index":304,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:11",{"_index":314,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:13",{"_index":312,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/navbar/navbar.component.ts:17",{"_index":313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/components/notfound/notfound.component.ts",{"_index":358,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/shared/pipes/search.pipe.ts",{"_index":429,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipes/search.pipe.ts:9",{"_index":433,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/main.server.ts",{"_index":482,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":293,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["started",{"_index":517,"title":{"index.html":{}},"body":{}}],["state",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":534,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interfaces/INote.html":{},"injectables/NoteService.html":{},"pipes/SearchPipe.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe",{"_index":172,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscription",{"_index":141,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":179,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":81,"title":{},"body":{"components/FotterComponent.html":{}}}],["technologies",{"_index":540,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["term",{"_index":432,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["term:string",{"_index":437,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["text",{"_index":108,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.addnoteform.reset",{"_index":175,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.addsubscription",{"_index":169,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.addsubscription.unsubscribe",{"_index":197,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.deletesubscription.unsubscribe",{"_index":200,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.errormsg",{"_index":271,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.formbuilder.group",{"_index":136,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getsubscription",{"_index":184,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getsubscription.unsubscribe",{"_index":198,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.getusernote",{"_index":168,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.delete(`${environment.basurl}/api/v1/notes/${noteid",{"_index":357,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.httpclient.get(`${environment.basurl}/api/v1/notes",{"_index":352,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.httpclient.get(`${environment.basurl}/api/v1/notes/allnotes",{"_index":350,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.httpclient.post(`${environment.basurl}/api/v1/notes",{"_index":348,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.httpclient.post(`${environment.basurl}/api/v1/users/signin",{"_index":451,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.post(`${environment.basurl}/api/v1/users/signup",{"_index":449,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.put(`${environment.basurl}/api/v1/notes/${noteid",{"_index":355,"title":{},"body":{"injectables/NoteService.html":{}}}],["this.isvalid",{"_index":266,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.loginform.valid",{"_index":262,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginsubscription",{"_index":263,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginsubscription.unsubscribe",{"_index":279,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.noteservice",{"_index":170,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.noteservice.deletenote(id).subscribe",{"_index":195,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.noteservice.getusernotes().subscribe",{"_index":185,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.noteslist.set",{"_index":188,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.noteslist.set(res.notes",{"_index":186,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.registerform.valid",{"_index":392,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersubscription",{"_index":393,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registersubscription.unsubscribe",{"_index":396,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate([\"/login",{"_index":395,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/home",{"_index":274,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":318,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.toastrservice.error(err.error.msg",{"_index":183,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastrservice.success('the",{"_index":177,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.toastrservice.success(res.msg",{"_index":275,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.togilpassword",{"_index":259,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.updatenoteform.patchvalue(nota",{"_index":194,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updatenoteform.value",{"_index":190,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updatesubscription",{"_index":191,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updatesubscription.unsubscribe",{"_index":199,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.userservice.signin(this.loginform.value).subscribe",{"_index":264,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.signup(this.registerform.value).subscribe",{"_index":394,"title":{},"body":{"components/RegisterComponent.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{}}}],["toastr",{"_index":165,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["toastrservice",{"_index":109,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["toggle",{"_index":232,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["togilpassword",{"_index":229,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["togilpassword:boolean",{"_index":258,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["track",{"_index":205,"title":{},"body":{"components/HomeComponent.html":{}}}],["transform",{"_index":430,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transform(allnotes",{"_index":431,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["transform(allnotes:inote",{"_index":436,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["true",{"_index":267,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"interfaces/INote.html":{},"components/LoginComponent.html":{},"injectables/NoteService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":519,"title":{},"body":{"index.html":{}}}],["update",{"_index":208,"title":{},"body":{"components/HomeComponent.html":{}}}],["updated",{"_index":193,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatedat",{"_index":216,"title":{},"body":{"interfaces/INote.html":{}}}],["updatenote",{"_index":119,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatenoteform",{"_index":110,"title":{},"body":{"components/HomeComponent.html":{}}}],["updatesubscription",{"_index":111,"title":{},"body":{"components/HomeComponent.html":{}}}],["updetenote",{"_index":324,"title":{},"body":{"injectables/NoteService.html":{}}}],["updetenote(_id",{"_index":192,"title":{},"body":{"components/HomeComponent.html":{}}}],["updetenote(noteid",{"_index":338,"title":{},"body":{"injectables/NoteService.html":{}}}],["updetenote(noteid:string",{"_index":353,"title":{},"body":{"injectables/NoteService.html":{}}}],["uppercase",{"_index":294,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["use",{"_index":88,"title":{},"body":{"components/FotterComponent.html":{}}}],["used",{"_index":541,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":397,"title":{},"body":{"components/RegisterComponent.html":{}}}],["users",{"_index":526,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":230,"title":{"injectables/UserService.html":{}},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["using",{"_index":524,"title":{},"body":{"index.html":{}}}],["valid",{"_index":287,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":161,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":242,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":377,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.min(20",{"_index":379,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":376,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern(/^01[0125][0",{"_index":381,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern(/^[a",{"_index":244,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":138,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/FotterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MainComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/RegisterComponent.html":{}}}],["variable",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":568,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":565,"title":{},"body":{"properties.html":{}}}],["view",{"_index":546,"title":{},"body":{"index.html":{}}}],["void",{"_index":122,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["web",{"_index":521,"title":{},"body":{"index.html":{}}}],["withhashlocation",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinmemoryscrolling({scrollpositionrestoration:\"top",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([headerinterceptor",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withviewtransitions",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["word",{"_index":297,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["writablesignal",{"_index":159,"title":{},"body":{"components/HomeComponent.html":{}}}],["z]\\w{6",{"_index":245,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":514,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            NgxSpinnerComponent\n                                FotterComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Note-App'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from \"./shared/components/navbar/navbar.component\";\nimport { NgxSpinnerComponent } from 'ngx-spinner';\nimport { FotterComponent } from \"./shared/components/fotter/fotter.component\";\n\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, NgxSpinnerComponent, FotterComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'Note-App';\n}\n\n    \n\n    \n        \n    \n\n\n Loading... \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Loading... '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from \"../../shared/components/navbar/navbar.component\";\nimport { FotterComponent } from \"../../shared/components/fotter/fotter.component\";\n\n@Component({\n  selector: 'app-auth',\n  imports: [RouterOutlet, NavbarComponent],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.css'\n})\nexport class AuthComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FotterComponent.html":{"url":"components/FotterComponent.html","title":"component - FotterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FotterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/fotter/fotter.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-fotter\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./fotter.component.html\n            \n\n\n\n            \n                styleUrl\n                ./fotter.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-fotter',\n  imports: [],\n  templateUrl: './fotter.component.html',\n  styleUrl: './fotter.component.css'\n})\nexport class FotterComponent {\n\n}\n\n    \n\n    \n        \n    \n    \n\n        \n\n            \n        \n                    \n                         is your everyday online notepad\n                    \n                    \n                    \n                        You can take notes\n                    \n                    \n                    \n                        Best of all - aNotepad is a fast, clean, and easy-to-use \n                    \n            \n\n\n        \n\n\n    \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                 is your everyday online notepad                                                                                    You can take notes                                                                                    Best of all - aNotepad is a fast, clean, and easy-to-use                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FotterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            SearchPipe\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addNoteForm\n                            \n                            \n                                addSubscription\n                            \n                            \n                                deleteSubscription\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                getSubscription\n                            \n                            \n                                    Private\n                                    Readonly\n                                noteService\n                            \n                            \n                                notesList\n                            \n                            \n                                text\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                updateNoteForm\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                deleteNote\n                            \n                            \n                                getUserNote\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                patchValue\n                            \n                            \n                                updateNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNote\n                        \n                    \n                \n            \n            \n                \ndeleteNote(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserNote\n                        \n                    \n                \n            \n            \n                \ngetUserNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchValue\n                        \n                    \n                \n            \n            \n                \npatchValue(nota: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nota\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNote\n                        \n                    \n                \n            \n            \n                \nupdateNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addNoteForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({\n    title: [null, [Validators.required]],\n    content: [null, [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        noteService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NoteService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notesList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateNoteForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({\n    _id: [null],\n    title: [null, [Validators.required]],\n    content: [null, [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  inject,\n  OnDestroy,\n  OnInit,\n  signal,\n  WritableSignal,\n} from '@angular/core';\nimport { NoteService } from '../../core/services/note/note.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { INote } from '../../core/interfaces/inote';\nimport { ToastrService } from 'ngx-toastr';\nimport { SearchPipe } from '../../shared/pipes/search.pipe';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  imports: [ReactiveFormsModule, SearchPipe, FormsModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css',\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  private readonly noteService = inject(NoteService);\n  private readonly toastrService = inject(ToastrService);\n\n  private readonly formBuilder = inject(FormBuilder);\n\n  addSubscription: Subscription = new Subscription();\n  getSubscription: Subscription = new Subscription();\n  updateSubscription: Subscription = new Subscription();\n  deleteSubscription: Subscription = new Subscription();\n\n  text = signal(\"\");\n\n  notesList = signal([]);\n\n  ngOnInit(): void {\n    this.getUserNote();\n  }\n\n  addNoteForm: FormGroup = this.formBuilder.group({\n    title: [null, [Validators.required]],\n    content: [null, [Validators.required]],\n  });\n\n  updateNoteForm: FormGroup = this.formBuilder.group({\n    _id: [null],\n    title: [null, [Validators.required]],\n    content: [null, [Validators.required]],\n  });\n\n  // ===\n\n  addNote() {\n    this.addSubscription = this.noteService\n      .addNote(this.addNoteForm.value)\n      .subscribe({\n        next: (res) => {\n          this.addNoteForm.reset();\n          // console.log(res);\n          this.toastrService.success('The note was added successfully');\n          this.getUserNote();\n        },\n        error: (err) => {\n          console.log(err);\n          this.toastrService.error(err.error.msg);\n        },\n      });\n  }\n\n  // ===\n\n  getUserNote() {\n    this.getSubscription = this.noteService.getUserNotes().subscribe({\n      next: (res) => {\n        this.notesList.set(res.notes);\n        // console.log(this.notesList);\n      },\n      error: (err) => {\n        this.notesList.set([]);\n      },\n    });\n  }\n\n  // ===\n\n  updateNote() {\n    const { _id, title, content } = this.updateNoteForm.value;\n\n    this.updateSubscription = this.noteService\n      .updeteNote(_id, { title, content })\n      .subscribe({\n        next: (res) => {\n          // console.log(res);\n          this.getUserNote();\n          this.toastrService.success('The note was updated successfully');\n        },\n      });\n  }\n\n  patchValue(nota: any) {\n    this.updateNoteForm.patchValue(nota);\n  }\n\n  // ===\n\n  deleteNote(id: any) {\n    this.noteService.deleteNote(id).subscribe({\n      next: (res) => {\n        this.getUserNote();\n        this.toastrService.success('The note was deleted successfully');\n      },\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.addSubscription.unsubscribe();\n    this.getSubscription.unsubscribe();\n    this.updateSubscription.unsubscribe();\n    this.deleteSubscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n        Add New Note\n    \n\n    \n        \n    \n\n    \n        \n            \n            \n            \n                \n                    Add Note\n                    \n                \n                \n                \n                    \n                    \n                        \n                            Title:\n                            \n                        \n                        \n                        \n                            Content:\n                            \n                        \n                    \n                    \n                    \n                    \n                        Post\n                        Close\n                    \n                    \n                \n                \n            \n        \n        \n    \n\n    \n\n    \n        @for (note of notesList() | search: text() ; track $index) {\n            \n                \n                    Title: \n                     {{ note.title }} \n    \n                    Content: \n                     {{ note.content }} \n                    \n                    \n                        Update\n                        Delete\n                    \n    \n                \n            \n        }\n    \n\n    \n\n    \n        \n            \n            \n                Update Note\n                \n            \n            \n                \n                    \n                    \n                        \n                            Title:\n                            \n                        \n                        \n                        \n                            Content:\n                            \n                        \n                    \n                    \n                    \n                    \n                        Update\n                        Close\n                    \n                    \n                \n            \n            \n\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Add New Note                                                                                                        Add Note                                                                                                                                                                Title:                                                                                                                                Content:                                                                                                                                                            Post                        Close                                                                                                                        @for (note of notesList() | search: text() ; track $index) {                                                Title:                      {{ note.title }}                         Content:                      {{ note.content }}                                                                 Update                        Delete                                                            }                                                            Update Note                                                                                                                                                    Title:                                                                                                                                Content:                                                                                                                                                            Update                        Close                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INote.html":{"url":"interfaces/INote.html","title":"interface - INote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/inote.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface INote {\n    _id: string\n    title: string\n    content: string\n    createdBy: string\n    createdAt: string\n    updatedAt: string\n    __v: number\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMsg\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                isvalid\n                            \n                            \n                                loginForm\n                            \n                            \n                                loginSubscription\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                togilPassword\n                            \n                            \n                                    Private\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject( FormBuilder )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({\n    email:[null, [Validators.required, Validators.email]],\n    password:[null, [Validators.required, Validators.pattern(/^[A-Z]\\w{6,}$/) ]],\n  },)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togilPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UserService } from '../../core/services/user/user.service';\nimport { Router, RouterLink } from '@angular/router';\nimport { NgClass } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  imports: [ReactiveFormsModule, NgClass, RouterLink],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css'\n})\nexport class LoginComponent implements OnDestroy {\n\n  private readonly userService = inject(UserService)\n  private readonly router = inject(Router)\n  private readonly toastrService = inject(ToastrService)\n  \n  loginSubscription:Subscription = new Subscription();\n\n\n  errorMsg:any;\n\n  togilPassword:boolean = false\n\n  toggle(){\n    this.togilPassword = !this.togilPassword;\n  }\n  \n  private readonly formBuilder = inject( FormBuilder )\n\n  loginForm:FormGroup = this.formBuilder.group({\n    email:[null, [Validators.required, Validators.email]],\n    password:[null, [Validators.required, Validators.pattern(/^[A-Z]\\w{6,}$/) ]],\n  },)\n\n  isvalid:boolean = false\n    \n  loginUser(){\n    if (this.loginForm.valid) {\n      this.loginSubscription = this.userService.signIn(this.loginForm.value).subscribe({\n        next:(res)=>{\n          // console.log(res);\n          this.isvalid = true\n          setTimeout(() => {\n            if (res.msg == 'done' ) {\n              this.isvalid = false \n              this.errorMsg = null\n              localStorage.setItem('token', res.token)\n              this.router.navigate(['/home'])\n              this.toastrService.success(res.msg)\n            }\n          }, 2000);\n          \n        },error:(err)=>{\n          // console.log(err);\n          this.errorMsg = err.error.msg\n          this.toastrService.error(err.error.msg)\n        }\n      })\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.loginSubscription.unsubscribe();\n  }\n\n}\n    \n\n    \n        \n\n    \n        \n            \n            \n                Login\n            \n                @if (errorMsg) {\n                    \n                            {{errorMsg}}\n                        \n                    \n                }\n            \n                \n                    Email:\n                    \n            \n                    @if (loginForm.get(\"email\")?.touched && loginForm.get(\"email\")?.errors ) {\n                        \n                            @if (loginForm.get(\"email\")?.getError(\"required\")) {\n                                Email is required\n                            }\n                            @else if (loginForm.get(\"email\")?.getError(\"email\")) {\n                                Enter Valid Email\n                            }\n                        \n                    }\n            \n                \n            \n                \n                    Password:\n                    \n                    \n                    \n                    @if (!togilPassword) {\n                          \n                    }@else{\n                          \n                    }\n                    \n\n                    \n            \n                    @if (loginForm.get(\"password\")?.touched && loginForm.get(\"password\")?.errors ) {\n                        \n                            @if (loginForm.get(\"password\")?.getError(\"required\")) {\n                                password is required\n                            }\n                            @else if (loginForm.get(\"password\")?.getError(\"pattern\")) {\n                                password must start with upperCase then from 6 to more any word chars\n                            }\n                        \n                    }\n\n\n\n                \n            \n            \n                Login \n                @if (isvalid == true) {  }\n                \n                SignUp\n\n            \n            \n            \n\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Login                            @if (errorMsg) {                                                {{errorMsg}}                                                            }                                                Email:                                                    @if (loginForm.get(\"email\")?.touched && loginForm.get(\"email\")?.errors ) {                                                    @if (loginForm.get(\"email\")?.getError(\"required\")) {                                Email is required                            }                            @else if (loginForm.get(\"email\")?.getError(\"email\")) {                                Enter Valid Email                            }                                            }                                                                            Password:                                                                                @if (!togilPassword) {                                              }@else{                                              }                                                                        @if (loginForm.get(\"password\")?.touched && loginForm.get(\"password\")?.errors ) {                                                    @if (loginForm.get(\"password\")?.getError(\"required\")) {                                password is required                            }                            @else if (loginForm.get(\"password\")?.getError(\"pattern\")) {                                password must start with upperCase then from 6 to more any word chars                            }                                            }                                                        Login                 @if (isvalid == true) {  }                                SignUp                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/main/main.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { NavbarComponent } from \"../../shared/components/navbar/navbar.component\";\nimport { FotterComponent } from \"../../shared/components/fotter/fotter.component\";\n\n@Component({\n  selector: 'app-main',\n  imports: [RouterOutlet, NavbarComponent],\n  templateUrl: './main.component.html',\n  styleUrl: './main.component.css'\n})\nexport class MainComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLogin\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLogin\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLogin\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/navbar/navbar.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/navbar/navbar.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/navbar/navbar.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/navbar/navbar.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, input } from '@angular/core';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [RouterLink, RouterLinkActive],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent {\n  private router = inject(Router)\n\n  isLogin = input(true);\n\n\n\n  logOut(){\n    localStorage.removeItem(\"token\")\n    this.router.navigate(['/login'])\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        Note App\n        \n            \n        \n        \n            \n                @if (isLogin()) {\n                    \n                        Home\n                    \n                    \n                          Logout \n                    \n                }@else{\n                    \n                        Login\n                    \n                    \n                        Register\n                    \n                }\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Note App                                                                @if (isLogin()) {                                            Home                                                                  Logout                                     }@else{                                            Login                                                                Register                                    }                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoteService.html":{"url":"injectables/NoteService.html","title":"injectable - NoteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/note/note.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                deleteNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getUserNotes\n                            \n                            \n                                updeteNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/note/note.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/note/note.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteNote\n                        \n                    \n                \n            \n            \n                \ndeleteNote(noteId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/note/note.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                noteId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/note/note.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserNotes\n                        \n                    \n                \n            \n            \n                \ngetUserNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/note/note.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updeteNote\n                        \n                    \n                \n            \n            \n                \nupdeteNote(noteId: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/note/note.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                noteId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoteService {\n\n  constructor(private httpClient:HttpClient ){}\n\n\n  addNote(data:any):Observable{\n    return this.httpClient.post(`${environment.basUrl}/api/v1/notes`, data)\n  }\n\n  getNotes():Observable{\n    return this.httpClient.get(`${environment.basUrl}/api/v1/notes/allNotes`)\n  }\n  \n  getUserNotes():Observable{\n    return this.httpClient.get(`${environment.basUrl}/api/v1/notes`)\n  }\n\n  updeteNote(noteId:string, data:any):Observable{\n    return this.httpClient.put(`${environment.basUrl}/api/v1/notes/${noteId}`, data)\n  }\n  \n  deleteNote(noteId:string):Observable{\n    return this.httpClient.delete(`${environment.basUrl}/api/v1/notes/${noteId}`)\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/notfound/notfound.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notfound.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavbarComponent } from \"../navbar/navbar.component\";\n\n@Component({\n  selector: 'app-notfound',\n  imports: [],\n  templateUrl: './notfound.component.html',\n  styleUrl: './notfound.component.css'\n})\nexport class NotfoundComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMsg\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                isvalid\n                            \n                            \n                                registerForm\n                            \n                            \n                                registerSubscription\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                togilPassword\n                            \n                            \n                                    Private\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerUser\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject( FormBuilder )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isvalid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({\n    name:[null , [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n    email:[null, [Validators.required, Validators.email]],\n    password:[null, [Validators.required, Validators.pattern(/^[A-Z]\\w{6,}$/) ]],\n    age:[null, [Validators.required, Validators.min(20)]],\n    phone:[null, [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)]]\n  },)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togilPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { UserService } from '../../core/services/user/user.service';\nimport { Router } from '@angular/router';\nimport { NgClass } from '@angular/common';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  imports: [ReactiveFormsModule, NgClass],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})\nexport class RegisterComponent {\n\n  private readonly userService = inject(UserService)\n  private readonly router = inject(Router)\n  private readonly toastrService = inject(ToastrService)\n\n  registerSubscription:Subscription = new Subscription();\n  \n\n  errorMsg:any;\n\n  isvalid:boolean = false\n\n  togilPassword:boolean = false\n\n  toggle(){\n    this.togilPassword = !this.togilPassword;\n  }\n\n  private readonly formBuilder = inject( FormBuilder )\n\n    \n  registerForm:FormGroup = this.formBuilder.group({\n    name:[null , [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n    email:[null, [Validators.required, Validators.email]],\n    password:[null, [Validators.required, Validators.pattern(/^[A-Z]\\w{6,}$/) ]],\n    age:[null, [Validators.required, Validators.min(20)]],\n    phone:[null, [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)]]\n  },)\n\n\n  registerUser(){\n\n    if (this.registerForm.valid) {\n      this.registerSubscription = this.userService.signUp(this.registerForm.value).subscribe({\n        next:(res)=>{\n          this.isvalid = true\n          // console.log(res);\n          setTimeout(() => {\n            if (res.msg == \"done\" ) {\n              this.router.navigate([\"/login\"])\n              this.isvalid = true\n            }\n          }, 2000);\n          this.toastrService.success(res.msg)\n          \n        },error:(err)=>{\n          // console.log(err);\n          this.errorMsg = err.error.msg\n          this.toastrService.error(err.error.msg)\n        }\n      })\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.registerSubscription.unsubscribe();\n  }\n\n}\n    \n\n    \n        \n\n    \n\n        \n    \n            Register\n    \n            @if (errorMsg) {\n                \n                        {{errorMsg}}\n                    \n                \n            }\n    \n            \n                User Name:\n                \n    \n                @if (registerForm.get(\"name\")?.touched && registerForm.get(\"name\")?.errors ) {\n                    \n                        @if (registerForm.get(\"name\")?.getError(\"required\")) {\n                            Name is required\n                        }\n                        @else if (registerForm.get(\"name\")?.getError(\"minLength\")) {\n                            Name Should be more than or equal  3 chars\n                        }\n                        @else if (registerForm.get(\"name\")?.getError(\"maxLength\")) {\n                            Name Should be less than or equal  20 chars\n                        }\n                    \n                }\n    \n    \n    \n            \n    \n            \n                Email:\n                \n    \n                @if (registerForm.get(\"email\")?.touched && registerForm.get(\"email\")?.errors ) {\n                    \n                        @if (registerForm.get(\"email\")?.getError(\"required\")) {\n                            Email is required\n                        }\n                        @else if (registerForm.get(\"email\")?.getError(\"email\")) {\n                            Enter Valid Email\n                        }\n                    \n                }\n    \n            \n    \n            \n                Password:\n                \n                \n\n                    @if (!togilPassword) {\n                          \n                    }@else{\n                          \n                    }\n\n                \n    \n                @if (registerForm.get(\"password\")?.touched && registerForm.get(\"password\")?.errors ) {\n                    \n                        @if (registerForm.get(\"password\")?.getError(\"required\")) {\n                            password is required\n                        }\n                        @else if (registerForm.get(\"password\")?.getError(\"pattern\")) {\n                            password must start with upperCase then from 6 to more any word chars\n                        }\n                    \n                }\n            \n    \n            \n                Age:\n                \n    \n            @if (registerForm.get(\"age\")?.touched && registerForm.get(\"age\")?.errors ) {\n                \n                    @if (registerForm.get(\"age\")?.getError(\"required\")) {\n                        age is required\n                    }\n                    @else if (registerForm.get(\"password\")?.getError(\"min\")) {\n                        age must be greater then 20\n                    }\n                \n            }\n    \n            \n    \n            \n                Phone:\n                \n    \n            @if (registerForm.get(\"phone\")?.touched && registerForm.get(\"phone\")?.errors ) {\n                \n                    @if (registerForm.get(\"phone\")?.getError(\"required\")) {\n                        phone is required\n                    }\n                    @else if (registerForm.get(\"password\")?.getError(\"pattern\")) {\n                        phone must be only egypt phone numbers\n                    }\n                \n            }\n    \n            \n    \n            Register\n            @if (isvalid == true) {  }\n            \n    \n        \n\n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Register                @if (errorMsg) {                                        {{errorMsg}}                                                }                                User Name:                                    @if (registerForm.get(\"name\")?.touched && registerForm.get(\"name\")?.errors ) {                                            @if (registerForm.get(\"name\")?.getError(\"required\")) {                            Name is required                        }                        @else if (registerForm.get(\"name\")?.getError(\"minLength\")) {                            Name Should be more than or equal  3 chars                        }                        @else if (registerForm.get(\"name\")?.getError(\"maxLength\")) {                            Name Should be less than or equal  20 chars                        }                                    }                                                        Email:                                    @if (registerForm.get(\"email\")?.touched && registerForm.get(\"email\")?.errors ) {                                            @if (registerForm.get(\"email\")?.getError(\"required\")) {                            Email is required                        }                        @else if (registerForm.get(\"email\")?.getError(\"email\")) {                            Enter Valid Email                        }                                    }                                                Password:                                                    @if (!togilPassword) {                                              }@else{                                              }                                    @if (registerForm.get(\"password\")?.touched && registerForm.get(\"password\")?.errors ) {                                            @if (registerForm.get(\"password\")?.getError(\"required\")) {                            password is required                        }                        @else if (registerForm.get(\"password\")?.getError(\"pattern\")) {                            password must start with upperCase then from 6 to more any word chars                        }                                    }                                            Age:                                @if (registerForm.get(\"age\")?.touched && registerForm.get(\"age\")?.errors ) {                                    @if (registerForm.get(\"age\")?.getError(\"required\")) {                        age is required                    }                    @else if (registerForm.get(\"password\")?.getError(\"min\")) {                        age must be greater then 20                    }                            }                                                Phone:                                @if (registerForm.get(\"phone\")?.touched && registerForm.get(\"phone\")?.errors ) {                                    @if (registerForm.get(\"phone\")?.getError(\"required\")) {                        phone is required                    }                    @else if (registerForm.get(\"password\")?.getError(\"pattern\")) {                        phone must be only egypt phone numbers                    }                            }                                Register            @if (isvalid == true) {  }                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'FotterComponent', 'selector': 'app-fotter'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/search.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        search\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(allNotes: INote[], term: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipes/search.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                allNotes\n                                            \n                                                            INote[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                term\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         INote[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { INote } from '../../core/interfaces/inote';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(allNotes:INote[], term:string): INote[] {\n    return allNotes.filter( (item)=> item.title.toLowerCase().includes(term.toLowerCase())  );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signIn\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/user/user.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n\n  constructor( private httpClient:HttpClient ) { }\n\n  signUp(data:any):Observable{\n    return this.httpClient.post(`${environment.basUrl}/api/v1/users/signUp`, data)\n  }\n  \n  signIn(data:any):Observable{\n    return this.httpClient.post(`${environment.basUrl}/api/v1/users/signIn`, data)\n  }     \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/notauth/notauth.guard.ts\n            \n            variable\n            notauthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptor/header/header.interceptor.ts\n            \n            variable\n            headerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptor/loading/loading.interceptor.ts\n            \n            variable\n            loadingInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/inote.ts\n            \n            interface\n            INote\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/note/note.service.ts\n            \n            injectable\n            NoteService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/layout/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layout/main/main.component.ts\n            \n            component\n            MainComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/fotter/fotter.component.ts\n            \n            component\n            FotterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/search.pipe.ts\n            \n            pipe\n            SearchPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/platform-server : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @angular/ssr : ^19.1.5\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            bootstrap : ^5.3.5\n        \n            express : ^4.18.2\n        \n            ngx-spinner : ^19.0.0\n        \n            ngx-toastr : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n📝 Note App – Angular & TypeScript\nNote App is a simple and clean web application built using Angular and TypeScript that allows users to manage their personal notes efficiently.\n\n🔥 Features\n\nAuthentication\nAdd new notes\nEdit existing notes\nDelete notes\nAll notes are stored locally using localStorage\nResponsive design using Bootstrap 5\n\n\n🛠️ Technologies Used\n\nAngular\nTypeScript\nBootstrap 5\nHTML5 & CSS3\n\n\n🚀 Live Demo\nView Project Online\n\n📂 GitHub Repository\nNote App on GitHub\n\n📬 Contact\nFeel free to reach out for feedback or collaboration:Email: mohamed.ahmed.mmaa.530@gmail.comLinkedIn: mohamed-ahmed-m7a5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            headerInterceptor   (src/.../header.interceptor.ts)\n                        \n                        \n                            loadingInterceptor   (src/.../loading.interceptor.ts)\n                        \n                        \n                            notauthGuard   (src/.../notauth.guard.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    The request handler used by the Angular CLI (dev-server and during build).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes,\n    withViewTransitions(),\n    withInMemoryScrolling({scrollPositionRestoration:\"top\"}), \n    withHashLocation()),\n    provideClientHydration(withEventReplay()), \n    provideHttpClient(withFetch(), withInterceptors([headerInterceptor, loadingInterceptor]) ) ,\n    provideAnimations(),\n    provideToastr(),\n    importProvidersFrom( NgxSpinnerModule )\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const pLATFORM_ID = inject(PLATFORM_ID);\n  const router = inject(Router);\n\n  if (isPlatformBrowser(pLATFORM_ID)) {\n    if (localStorage.getItem('token') !== null) {\n      return true;\n    } else {\n      router.navigate(['/login'])\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    basUrl: `https://note-sigma-black.vercel.app`\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptor/header/header.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        headerInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\n\n  const pLATFORM_ID = inject(PLATFORM_ID)\n\n  if (isPlatformBrowser(pLATFORM_ID)) {\n\n    if (localStorage.getItem(\"token\") !== null ) {\n      req = req.clone({\n        setHeaders:{token:`3b8ny__${localStorage.getItem(\"token\")}` !}\n      })\n    }\n    \n  }\n  \n  return next(req);\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptor/loading/loading.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadingInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\n\n  const ngxSpinnerService = inject(NgxSpinnerService);\n\n  ngxSpinnerService.show()\n  \n  return next(req).pipe( finalize( ()=>{\n  ngxSpinnerService.hide()\n    \n  } ) );\n\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/notauth/notauth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notauthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\n  const pLATFORM_ID = inject(PLATFORM_ID);\n  const router = inject(Router);\n\n\n  if (isPlatformBrowser(pLATFORM_ID)) {\n    if (localStorage.getItem('token') !== null) {\n      router.navigate(['/home'])\n      return false;\n    } else {\n      return true;\n    }\n  } else {\n    return false;\n  }\n\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
